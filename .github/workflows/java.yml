name: Java CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Find all *.java files and compile all Java files
        run: cd src && find -name "*.java" > java_files.txt && javac @java_files.txt && ls
      #    - name: Make manifest, find all *.class files, and make jar file
      #      run: cd src && find -name "*.java" > java_files.txt && javac @java_files.txt && echo "Main-Class:Solution" > manifest.txt && find -name "*.class" > class_files.txt && jar cvfm PasswordVault.jar manifest.txt @class_files.txt && ls
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths password-vault README.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./password-vault.zip
          asset_name: password-vault.zip
          asset_content_type: application/zip